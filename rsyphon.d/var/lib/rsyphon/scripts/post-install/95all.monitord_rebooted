#!/bin/bash
#
#  "rsyphon"
#
# Description: Installs an init script that will report the rebooted status
#              to the monitor server.
#

# netcat timeout in seconds
TIMEOUT=30

# File created after reboot if rebooted state was successuflly reported to the server.
rebooted_state_file=/etc/rsyphon/rs_monitor.client.rebooted
rebooted_message="status=102:speed=0"

send_message_cmd() {
    if [ -z $MONITOR_SERVER ]; then
        # OL: Need to do something here...(log error)
	echo "false"
        return
    fi
    if [ -z $MONITOR_PORT ]; then
        MONITOR_PORT=8181
    fi

    mac=$(LC_ALL=C ifconfig $DEVICE 2>/dev/null | sed -ne "s/.*HWaddr //p" | sed "s/ //g" | sed s/:/./g)
    message="mac=$mac:ip=$IPADDR:host=$HOSTNAME:$rebooted_message"

    # Find netcat binary
    netcat=$((type -p netcat || type -p nc) 2>/dev/null)

    if test -z "$netcat"
    then # try to use /dev/tcp
        echo "TMOUT=$TIMEOUT exec 3<>/dev/tcp/$MONITOR_SERVER/$MONITOR_PORT; echo \"$message\" >&3"
    else # use netcat
        echo "echo \"$message\" | $netcat -w $TIMEOUT $MONITOR_SERVER $MONITOR_PORT"
    fi
 }

# Detect the system init technology and create init files accordingly.

create_InitFile() {
    # Create /etc/rsyphon if it doesn't exist.
    if [ ! -d /etc/rsyphon ]; then
        mkdir -p /etc/rsyphon
    fi

    # Redhat like (RHEL / old Fedora / Mandrake / ...)
    if test -d /etc/rc.d/init.d && test ! -d /lib/systemd/system; then
        write_SysVInitFile /etc/rc.d/init.d/rsyphon-monitor-firstboot
    # SuSE or debian like like (SuSE, OpenSuSE, ...)
    elif test -d /etc/init.d && test ! -d /lib/systemd/system; then
        write_SysVInitFile /etc/init.d/rsyphon-monitor-firstboot
    # Modern distro with systemd like Fedora, Mandriva, ...
    # NOTE: debian has this directory even if systemd is not used, thus we need to check for systemd after init scripts...
    elif test -d /lib/systemd/system; then
        write_systemdInitFile
    # Unknown script boot system. default to rc.local.
    else
        cat <<EOF >> /etc/rc.local
$(send_message_cmd) || sed -i -e /etc/rc.local 's/^(echo ".*$//g'
EOF
    fi

}

# write_systemdVInitFile()
#
write_systemdInitFile() {

# Create the systemd service file
    cat << EOF > /lib/systemd/system/rsyphon-monitor-firstboot.service
# systemd service description file for rsyphon
# (c) Olivier Lahaye 2012

[Unit]
Description=Report the REBOOTED state to the image server
After=syslog.target network.target
Before=sysinit.target final.target

[Service]
Type=oneshot
ExecStart=/lib/systemd/rsyphon-monitor-firstboot
RemainAfterExit=no

[Install]
WantedBy=default.target
EOF

# Create the script that will run
    cat <<EOF > /lib/systemd/rsyphon-monitor-firstboot
#!/bin/bash
# systemd service script for rsyphon
# (c) Olivier Lahaye 2012

if ($(send_message_cmd))
then
    touch $rebooted_state_file
    # Self disable if success.
    systemctl disable rsyphon-monitor-firstboot.service
else
    echo "Error, cannot report rebooted status to server $MONITOR_SERVER"
    echo "Check that rsyphon-monitord is running on the server"
    exit 1
fi
EOF

    chmod +x /lib/systemd/rsyphon-monitor-firstboot
    # --no-reload avoid systemd to immediately start the service (before reboot).
    systemctl --no-reload enable rsyphon-monitor-firstboot.service
}

#
# write_SysVInitFile()
# $1 name of the init script with full path.
#
write_SysVInitFile() {
    cat << EOF > $1
#!/bin/bash
### BEGIN INIT INFO
# Provides: rsyphon-monitor-firstboot
# Required-Start: $network $local_fs $syslog
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:
# Short-Description: Report the REBOOTED state to the image server
# Description: Send the informations to the rs_monitor daemon on the image
#              to set the REBOOTED state for this correctly installed client.
### END INIT INFO

set -e

case "\$1" in
  start)
        if ($(send_message_cmd))
        then
            if [ -x /sbin/chkconfig ]; then
                /sbin/chkconfig --del rsyphon-monitor-firstboot
            elif [ -e /etc/rcS.d/S99rsyphon-monitor-firstboot ]; then
                rm -f /etc/rcS.d/S99rsyphon-monitor-firstboot
            fi
            touch $rebooted_state_file
        else
            echo "Error, cannot report rebooted status to server $MONITOR_SERVER"
            echo "Check that rsyphon-monitord is running on the server"
        fi
        ;;
  stop|reload|restart|force-reload)
        ;;
  *)
        exit 1
        ;;
esac
exit 0
EOF

    chmod a+x $1
    if [ -x /sbin/chkconfig ]; then
        chkconfig --add rsyphon-monitor-firstboot
    elif [ ! -e /etc/rcS.d/S99rsyphon-monitor-firstboot ]; then
        ln -s $init_file /etc/rcS.d/S99rsyphon-monitor-firstboot
    fi
}

# Load installation variables.
[ -e /tmp/post-install/variables.txt ] && . /tmp/post-install/variables.txt

# Create the init file that will report the rebooted states at first boot.
create_InitFile
